# Default values for edbpgai-bootstrap on Kind https://kind.sigs.k8s.io/
system: kind
# bootstrapImage specify the image to use for the edbpgai-bootstrap
# Ideally you should pass this via command line.
bootstrapImageName: "docker.enterprisedb.com/staging_pgai-platform/edbpgai-bootstrap/bootstrap-kind"
bootstrapImageTag: local-dev
# containerRegistryURL specify the container registry URL to use for components
containerRegistryURL: "docker.enterprisedb.com/staging_pgai-platform"

# imagePullSecrets specify the image pull secrets to use for the edbpgai-bootstrap
imagePullSecrets: ["edb-cred"]
# backoffLimit specify the backoff limit for the edbpgai-bootstrap job
backoffLimit: 4
# restartPolicy specify the restart policy for the edbpgai-bootstrap job
restartPolicy: Never
# resources specify the resources to use for the edbpgai-bootstrap job
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 1
    memory: 1Gi
# securityContext specify the security context to use for the edbpgai-bootstrap job
securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000720000
  runAsGroup: 1000720000
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  seccompProfile:
    type: RuntimeDefault
# scenarios specify the scenarios to use, e.g. "cluster,monitoringLogging,migration"
scenarios: ""
# disabledComponents list all the components you don't want to install. Ideally it should be empty on Kind
disabledComponents:
# this section contains all the parameters to be replaced inside specific components,
# for uniformity and consistency the vars in this section are lowercase and use _ in place of - when needed.
parameters:
  global:
    # Variables that appy to two or more components
    # internals backup folder for edb internal databases and velero (12 chars)
    internal_backup_folder: a7462dbc7106
    # Domain name for the portal
    portal_domain_name: portal.pgai.customer.aroapp.io
    # If the customer has his own CA, they can provide the secret name here.
    # Please following the document to create the secret.
    # <Link is TBD>
    # The value should not be global-ca-secret.
    # ca_secret_name: customer-ca
    # Storage class to be  used for the PVs
    storage_class: standard
  upm-api-pnxt-metric:
    log_level: info # Log level for the component in each flavour
    tsdb_host: thanos-query.monitoring.svc.cluster.local
    tsdb_port: "9090"
  upm-api-pnxt-pd:
    log_level: info # Log level for the component in each flavour
  upm-istio:
    # Domain name for the OCP console
    openshift_console_domain_name: console-openshift-console.apps.customer.aroapp.io
    # A base64 encoded AES-256 Key for portal cookie confounding and encryption
    # use 'openssl rand -base64 32' to generate your own one
    cookie_aeskey: "rzkutHl8NJNztPMEJYykZouHslNiA7xmIXH+58ISUVo="
  upm-beaco-ff-base:
    # Interval at which the usage collection happens
    # Recommended value: 24h
    # Supports 1h (represents 1 hour) to 24h (represents 24 hours)
    usage_generator_interval: "5m"
  upm-beaco-usages:
    # backward compatibility for the 1.0-appl patch release
    usage_generator_interval: "5m"
  upm-prometheus:
    # set both memory requests and limits to memory value for QOS guarantee
    memory: "4Gi"
  upm-trust-manager:
    # The name of the namespace where cert-manager is installed as pre-requirements.
    cert_manager_namespace: cert-manager
pgai:
  portal:
    # the hostname of the EDB Postgres AI portal application use upm-beaco-ff-base.portal_domain_name (will be fixed in UPM-40062)
    authentication:
      # the client secret for the EDB Postgres AI portal application
      clientSecret: "edb-postgres-ai-secret"
      # A list of arbitrary IdP connectors to be used for authentication
      # The connector should be in the format of the dex connector configuration by doc
      # https://dexidp.io/docs/connectors/
      idpConnectors: []
      # a list of predefined users with encrypted password for local authentication
      staticPasswords:
        - email: "owner@mycompany.com"
          # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
          hash: "$2y$10$STTzuGJa3PydqHvlzi2z6OgDU1G/JLTqiuGblH.RemIutWxkztN5m"
          username: "Owner MyCompany"
          # userID must not be changed since the first time installation
          userID: "c5998173-a605-449a-a9a5-4a9c33e26df7"
beaconAgent:
  location: "devspatcher"
  beaconDBConnected: true
  plaintext: true
  logLevel: "debug"
  inCluster: true
  provisioning:
    nodePortDomain: "pgai.com"
    imageDiscovery: false
  providers:
    - appliance
beaconServer:
  logLevel: "debug"